@model SparkServerLite.ViewModels.Admin.BlogEditViewModel

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Blog Edit";
}

<h1>@ViewData["Title"]</h1>

@if (Model.Mode == SparkServerLite.Infrastructure.Enums.EditMode.Edit)
{
    <h2>ID: @Model.ID</h2>

    <a href="/Admin/BlogDelete?ID=@Model.ID" class="btn delete">Delete</a>

    if (Model.ID > 0)
    {
        <a href="@Model.BlogURL?preview=true" target="_blank" class="btn">Preview Blog</a>
    }
}

@using (Html.BeginForm(actionName: "BlogUpdate", controllerName: "Admin", method: FormMethod.Post))
{
    if (Model.Mode == SparkServerLite.Infrastructure.Enums.EditMode.Edit)
    {
        @Html.HiddenFor(x => x.ID)
    }

    @Html.HiddenFor(x => x.Mode)

    <div class="row">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title)
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.Subtitle)
        @Html.TextBoxFor(x => x.Subtitle)
        @Html.ValidationMessageFor(x => x.Subtitle)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.Markdown)
        @Html.TextAreaFor(x => x.Markdown, htmlAttributes: new { style = "height: 400px" })
        <div class="controls">
            <button type="button" id="ConvertToHTML">Convert</button>
            <button type="button" id="SeeHTML">Preview</button>
        </div>
        @Html.ValidationMessageFor(x => x.Markdown)
    </div>

    if (Model.Mode == SparkServerLite.Infrastructure.Enums.EditMode.Edit)
    {
        <div class="row">
            <h2>Media</h2>

            <div class="media-list" id="BlogMediaList"></div>

            <img src="/images/loader.gif" alt="Loader GIF" id="BlogMediaListLoader" class="loader-gif" />

            <div>
                <input type="file" id="MediaFiles" multiple />
                <br/>
                <button type="button" id="UploadMediaFiles" >Upload Files</button>
            </div>
            
        </div>
    }

    <div class="row">
        @Html.LabelFor(x => x.Content)
        @Html.TextAreaFor(x => x.Content, htmlAttributes: new { style = "height: 400px" })
        @Html.ValidationMessageFor(x => x.Content)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.PublishDate)
        @Html.TextBoxFor(x => x.PublishDate, htmlAttributes: new { @class = "half" })
        <div class="controls">
            <button type="button" id="DateTimeToday">Today</button>
        </div>
        @Html.ValidationMessageFor(x => x.PublishDate)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.AuthorID)
        @Html.DropDownListFor(x => x.AuthorID, Model.AuthorSource, htmlAttributes: new { @class = "half" })
        @Html.ValidationMessageFor(x => x.AuthorID)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.Slug)
        @Html.TextBoxFor(x => x.Slug, htmlAttributes: new { @class = "half" })
        <div class="controls">
            <button type="button" id="CreateUniqueURL">Create From Title</button>
        </div>
        @Html.ValidationMessageFor(x => x.Slug)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.ImagePath)
        @Html.TextBoxFor(x => x.ImagePath, htmlAttributes: new { @class = "half" })
        <div class="controls">
            <button type="button" id="GetDefaultHeroImage" class="btn">Get Default Hero Image</button>
        </div>
        @Html.ValidationMessageFor(x => x.ImagePath)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.BlogTags)

        <div class="checkbox-list">

            @foreach (SelectListItem item in Model.BlogTagSource)
            {
                if (item.Selected)
                {
                    <label for="BlogTag-@item.Value"><input type="checkbox" checked name="BlogTags" value="@item.Value" id="BlogTag-@item.Value" />@item.Text</label>
                }
                else
                {
                    <label for="BlogTag-@item.Value"><input type="checkbox" name="BlogTags" value="@item.Value" id="BlogTag-@item.Value" />@item.Text</label>
                }
            }

        </div>


    </div>

    <div class="row center">
        @if (Model.Mode == SparkServerLite.Infrastructure.Enums.EditMode.Add)
        {
            <input type="submit" value="Add Blog" class="btn primary" />
        }
        else
        {
            <input type="submit" value="Save Changes" class="btn primary" />
        }
    </div>

    @section PageScripts {

        <script type="text/javascript">

            SparkServerAdmin.loadBlogMediaList();

        </script>

    }



}
