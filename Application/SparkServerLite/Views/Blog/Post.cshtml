@using SparkServerLite.Infrastructure;
@model SparkServerLite.ViewModels.BlogViewModel

@{
    ViewData["Title"] = Model.Title;
}

@section PageMetadata {

    <meta property="og:title" content="@Model.Title" />
    <meta property="og:type" content="article" />
    <meta property="og:url" content="@Model.SiteURL@Model.URL" />
    <meta property="og:image" content="@Model.SiteURL@Model.ImageURL" />

    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content="@Model.Title" />
    <meta name="twitter:description" content="@Model.Subtitle" />
    <meta name="twitter:image" content="@Model.SiteURL@(Model.ImageURL)" />
    <meta name="twitter:site" content="@Model.Sitename" />

}

<div class="content container post">

    <div class="blog-banner" style="background-image: url('@Model.ImageURL');">
        <h1 class="blog-title">@ViewBag.Title</h1>
    </div>

    @if (Model.IsPreview)
    {
        <div style="font-size: 3em; font-weight: bold; text-align: center; color: #FFF; background-color: #DC291E; padding: 0.5em;">BLOG PREVIEW</div>

        <div style="background-color: #FFF; padding: 1em; margin: 2em auto; border: 2px solid #DC291E;">
            <div style="font-size: 1.5em; font-weight: bold; margin-bottom: 0.5em;">Subtitle (Preview Only)</div>
            @Html.Raw(Model.Subtitle)
        </div>
    }

    <article class="blog">

        <div class="blog-about">
            <div class="columns">
                <div class="item">
                    <div class="label">Author</div>
                    <p>@Model.AuthorFullName</p>
                </div>

                <div class="item">
                    <div class="label">Published</div>
                    <p><time datetime="@Model.PublishDate.ToString(format: "yyyy-dd-MM")">@Model.PublishDate.ToString(format: "MMMM dd, yyyy")</time></p>
                </div>

                <div class="item">
                    <div class="label">Tags</div>
                    <ul class="tags">

                        @if (Model.BlogTags.Count > 0)
                        {
                            foreach (var tag in Model.BlogTags)
                            {
                                <li><a href="/posts/tag/@FormatHelper.FormatTagForURL(tag.BlogTagName)">@tag.BlogTagName</a></li>
                            }
                        }
                        else
                        {
                            <li>No tags defined</li>
                        }
                    </ul>
                </div>

            </div>


        </div>

        @Html.Raw(Model.Content)

    </article>

</div>

@section PageScripts {

    <script src="/js/prism.js"></script>

}